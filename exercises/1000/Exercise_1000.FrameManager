{"number":"1000","startingCode":"/* Exercise 1000 - Serial Operators*/\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(9600);\n\n  Serial.println(\"Declare pin in setup and initialize to:\");\n  int pin = 8;\n  Serial.println(pin);\n  \n  Serial.println(\"Use a while loop and decrementing to set the pinModes.\");\n  while(pin >= 2) {\n    pinMode(pin, OUTPUT);  \n    pin--;   \n  }\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  Serial.println(\"Declare pin in loop and initialize to:\");\n  //TODO: Add missing line here\n  Serial.println(pin);\n  digitalWrite(pin, HIGH);\n  delay(pin * 100);\n  \n  Serial.println(\"Compound multiplication: pin *= n; pin is:\");\n  pin *= 2;\n  Serial.println(pin);\n  digitalWrite(pin, HIGH);\n  delay(pin * 100);\n\n  //TODO: Add missing lines here\n\n}","suffix":"int main() {\nsetup();\nloop();\nreturn 0;\n}\n","board":{"type":"LED Board","setup":{"pinKeyframes":[]}},"frameManager":{"frames":[{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"4":1023},"postDelay":400,"outputText":["Declare pin in setup and initialize to:\n","8\n","Use a while loop and decrementing to set the pinModes.\n","Declare pin in loop and initialize to:\n","4\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"4":1023,"8":1023},"postDelay":800,"outputText":["Compound multiplication: pin *= n; pin is:\n","8\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"4":1023,"7":1023,"8":1023},"postDelay":700,"outputText":["Decrement operator: pin--; pin is:\n","7\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"3":1023,"4":1023,"7":1023,"8":1023},"postDelay":300,"outputText":["Compound subtraction: pin -= n; pin is:\n","3\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"3":1023,"4":1023,"5":1023,"7":1023,"8":1023},"postDelay":500,"outputText":["Compound addition: pin += n; pin is:\n","5\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"3":1023,"4":1023,"5":1023,"6":1023,"7":1023,"8":1023},"postDelay":600,"outputText":["Increment operator: pin++; pin is:\n","6\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"2":1023,"3":1023,"4":1023,"5":1023,"6":1023,"7":1023,"8":1023},"postDelay":200,"outputText":["Compound division: pin /= n; pin is:\n","2\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"postDelay":900,"outputText":["Use a while loop and incrementing to set the pins LOW.\n","Final delay: pin * 100\n"]},{"ledModes":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"ledStates":{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"postDelay":0,"outputText":[]}],"currentFrame":8,"elapsedTime":4400,"isGraded":true,"grade":false},"directions":"Exercise1000: \nObjective: Use the Serial Monitor, compound operators, and increment/decrement operators.  These operators are useful for modifying a variable's value.\n\n1. Each delay should be of duration pin * 100.  Notice that you can have expressions as inputs to functions.\n\n2. Notice the example while loop given.  This runs while the condition inside the () is true.  You will need to copy and modify this example for void loop.\n\n3. The Serial Monitor Output will guide and comment your code.  \n\n4. You will have to figure out what n should be for each step to get the desired output.\n\n5. You need to have the correct Serial Monitor Output in the correct frames for Giffer to recognize your code as correct.\n\n6. You may copy-paste the strings from below, printing the variable where indicated.  To output the correct text to the Serial Monitor, use code such as the following.  \n\n7. You may use this to as a starting point:\n \nTo complete the exercises:\n\n1. Read the instructions above.\n2. Save the exercise as: YourInitials_Exercise1000_SerialOperators in your Documents/Arduino/Exercises Folder.\n3. Create the sequence shown and test it on your Arduino to verify that it is correct.\n4. Copy the code into the Giffer website (link below).\n5. Add your name and exercise number.\n6. Select the Check the result button.\n7. Run the result an ensure it is correct.\n8. Then return to the ArduinoIDE and copy all the code in your sketch to the clipboard\n9. Click \"Prepare an answer\" on NEO\n10. Paste by pressing CTRL + V\n11. Submit"}
